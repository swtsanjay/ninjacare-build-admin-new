{"version":3,"file":"static/js/831.609a7c43.chunk.js","mappings":"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","sources":["views/pages/Dashboard.js","services/setting.js","utils/TinyMce.js","views/pages/Setting.js","services/service.js","services/file.js","utils/UploadImage.js","views/components/Pagination.js","views/pages/Service.js","services/worker.js","services/workhistory.js","views/pages/WorkHistory.js","services/account.js","views/pages/management/workerManagement.js","services/user.js","services/job.js","views/pages/JobList.js","views/pages/management/userManagement.js","services/leave.js","views/pages/Leave.js","views/layout/route.js","views/pages/admin/Profile.js","views/pages/admin/Change-password.js","views/layout/Menu.js","views/pages/errors/Error404.js","views/layout/Layout.js"],"sourcesContent":["const App = () => {\n    return (\n        <>\n            <h2 style={{textAlign: 'center'}}>Dashboard Coming Soon...</h2>\n        </>\n    );\n};\n\nexport default App;","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'setting';\n\n    static detail(data) {\n        return axios.get(this.baseURL + '/details', { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static delete(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n}","import React, { useRef } from 'react';\nimport { Editor } from '@tinymce/tinymce-react';\n\n\nexport default function TinyMce(props) {\n    let { height = 400, menubar = false, plugins, toolbar, content_style, initialValue, onChange } = props;\n    if (!plugins) {\n        plugins = [\n            'advlist autolink lists link image charmap print preview anchor',\n            'searchreplace visualblocks code fullscreen',\n            'insertdatetime media table paste code help wordcount forecolor backcolor textcolor',\n            'image paste table code'\n        ];\n    }\n    if (!toolbar) {\n        toolbar = 'undo redo | formatselect | bold italic backcolor | forecolor emoticons'\n            + '| table tabledelete | tableprops tablerowprops tablecellprops'\n            + '| alignleft aligncenter alignright alignjustify | bullist numlist outdent indent | removeformat | help | image link | imageupload | code | fullscreen';\n        // toolbar = 'undo redo | insert | styleselect | bold italic | fontselect fontsizeselect | alignleft aligncenter alignright alignjustify | forecolor backcolor emoticons | bullist numlist outdent indent | link unlink | image responsivefilemanager table | removeformat code help | fullscreen'\n    }\n    if (!content_style) {\n        content_style = 'body { font-family:Helvetica,Arial,sans-serif; font-size:14px }';\n    }\n\n    const editorRef = useRef(null);\n    const editorContent = () => {\n        if (editorRef.current) {\n            onChange(editorRef.current.getContent())\n        }\n    };\n\n    return (\n        <>\n            <Editor\n                onInit={(evt, editor) => editorRef.current = editor}\n                {...{ initialValue }}\n                init={{\n                    height, menubar, plugins, toolbar, content_style,\n\n                    file_browser_callback_types: 'image',\n                    file_picker_callback: function (cb, value, meta) {\n                        const input = document.createElement(\"input\");\n                        input.setAttribute(\"type\", \"file\");\n                        input.setAttribute(\"accept\", \"image/*\");\n                        input.onchange = function () {\n                            const file = this.files[0];\n                            const reader = new FileReader();\n                            reader.readAsDataURL(file);\n                            reader.onload = () => { cb(reader.result, { title: file.name }); };\n                        };\n                        input.click();\n                    },\n                    deprecation_warnings: false\n                }}\n                onSelectionChange={editorContent}\n            />\n        </>\n    );\n}\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Button, Form, Input, Row, Col, Spin, Tabs, Card } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState } from 'react';\nimport service from '../../services/setting';\nimport { AntdMsg } from '../../utils/Antd';\nimport TinyMce from \"../../utils/TinyMce\"\n\nexport default function Setting() {\n\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [currentTab, setCurrentTab] = useState(0);\n\n    const handleChange = (value, changeForm) => {\n        if (changeForm) {\n            Object.entries(value).forEach(ent => {\n                let varDt = data;\n                const k = ent[0];\n                const v = ent[1];\n                let keys = k.split('.');\n                for (let i = 0; i < keys.length; i++) {\n                    if (i + 1 === keys.length) {\n                        varDt[keys[i]] = v;\n                    } else {\n                        if (typeof varDt[keys[i]] === 'undefined') {\n                            if (parseInt(keys[i + 1]) * 1 >= 0) {\n                                varDt[keys[i]] = [];\n                            } else {\n                                varDt[keys[i]] = {};\n                            }\n                        } varDt = varDt[keys[i]];\n                    }\n                }\n            });\n            setData({ ...data });\n        }\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        try {\n            (() => {\n                return currentTab === 0 ? service.save({ ...data, type: 'aboutus', data: data.data }) :\n                    currentTab === 1 ? service.save({ ...data, type: 'termcondition', data: data.data }) :\n                        currentTab === 2 ? service.save({ ...data, type: 'faq', data: data.data }) :\n                            currentTab === 3 ? service.save({ ...data, type: 'contactus', data: data.data }) :\n                                currentTab === 4 ? service.save({ ...data, type: 'privacy-policy', data: data.data }) : null\n\n            })().then(res => {\n                AntdMsg(res.message);\n                handleChange({ ...res.data });\n                setCurrentTab((currentTab + 1) % 5);\n            }).catch(err => {\n                if (typeof err.message === 'object') {\n                    let dt = err.message[Object.keys(err.message)[0]];\n                    AntdMsg(dt, 'error');\n                } else {\n                    AntdMsg(err.message, 'error');\n                }\n            }).finally(() => {\n                setAjxRequesting(false);\n            });\n        } catch (err) {\n            AntdMsg(err.message, 'error');\n        }\n    }\n\n    const getDetails = (type) => {\n        setAjxRequesting(true);\n        service.detail(type).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    useEffect(() => {\n        if (currentTab === 0) {\n            getDetails({ _id: data._id, type: \"aboutus\" });\n        } else if (currentTab === 1) {\n            getDetails({ _id: data._id, type: \"termcondition\" });\n        } else if (currentTab === 2) {\n            getDetails({ _id: data._id, type: \"faq\" });\n        } else if (currentTab === 3) {\n            getDetails({ _id: data._id, type: \"contactus\" });\n        } else if (currentTab === 4) {\n            getDetails({ _id: data._id, type: \"privacy-policy\" });\n        }\n    }, [currentTab])\n\n\n\n    return (\n        <>\n            <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                <Tabs activeKey={currentTab} type=\"card\" size=\"small\" style={{ marginBottom: 0 }} onChange={(v) => { setCurrentTab(v); }}\n                    items={[\n                        {\n                            label: \"About us\",\n                            key: 0,\n                            children: <Card style={{ borderTop: 0 }}>\n                                <Aboutus {...{ data, handleChange, save }} />\n                            </Card>,\n                        },\n                        {\n                            label: \"Terms & Condition\",\n                            key: 1,\n                            children: <Card style={{ borderTop: 0 }}>\n                                <TandC {...{ data, handleChange, save }} />\n                            </Card>,\n                        },\n                        {\n                            label: \"FAQ\",\n                            key: 2,\n                            children: <Card style={{ borderTop: 0 }}>\n                                <FAQ {...{ data, handleChange, save }} />\n                            </Card>,\n                        },\n                        {\n                            label: \"Contact us\",\n                            key: 3,\n                            children: <Card style={{ borderTop: 0 }}>\n                                <Contactus {...{ data, handleChange, save }} />\n                            </Card>,\n                        },\n                        {\n                            label: \"Privacy Policy\",\n                            key: 4,\n                            children: <Card style={{ borderTop: 0 }}>\n                                <PrivacyPolicy {...{ data, handleChange, save }} />\n                            </Card>,\n                        }\n                    ]}\n                />\n                <div style={{ display: \"flex\", flexDirection: \"row-reverse\", paddingTop: \"5px\", paddingRight: \"70px\" }}>\n                    <Button key=\"save\" type=\"primary\" onClick={save}>{currentTab === 4 ? \"Save\" : \"Next\"}</Button>\n                </div>\n            </Spin>\n\n        </>\n    );\n};\n\nconst Aboutus = ({ data }) => {\n    return (\n        <>\n            <Form layout=\"vertical\">\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"\" required>\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst TandC = ({ data }) => {\n\n\n    return (\n        <>\n            <Form layout=\"vertical\">\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"\" required>\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n\n            </Form>\n        </>\n    );\n}\n\nconst FAQ = ({ data }) => {\n\n\n    return (\n        <>\n            <Form layout=\"vertical\">\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"\" required>\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\nconst Contactus = ({ data, handleChange }) => {\n\n\n\n    return (\n        <>\n            <Form layout=\"vertical\">\n                <Row gutter={[12, 2]} style={{ width: \"100%\", padding: \"0 5px\" }}>\n                    <Col span={6}>\n                        <Form.Item label=\"Email\" required>\n                            <Input type=\"email\" placeholder=\"johndoe123@gmail.com\" value={data.data?.email} onChange={e => { handleChange({ data: { ...data.data, email: e.target.value } }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={6}>\n                        <Form.Item label=\"Phone Number\" required>\n                            <Input placeholder=\"995412XXX\" value={data.data?.number} onChange={e => { handleChange({ data: { ...data.data, number: e.target.value } }) }} />\n                        </Form.Item>\n                    </Col>\n                    <Col span={12}>\n                        <Form.Item label=\"Address\" required>\n                            <Input placeholder=\"Street No: 9, Delhi: 110054\" value={data.data?.address} onChange={e => { handleChange({ data: { ...data.data, address: e.target.value } }) }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\nconst PrivacyPolicy = ({ data }) => {\n\n\n    return (\n        <>\n            <Form layout=\"vertical\">\n                <Row gutter={[12, 2]}>\n                    <Col span={24}>\n                        <Form.Item label=\"\" required>\n                            <TinyMce initialValue={data.data} onChange={(v) => { data.data = v }} />\n                        </Form.Item>\n                    </Col>\n                </Row>\n            </Form>\n        </>\n    );\n}\n\n","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'service';\n\n    static detailService(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static listService(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static saveService(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static deleteService(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n}","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'file';\n\n    static get(url) {\n        return axios.get(\"../\"+  url);\n    }\n\n    static save(data, config) {\n        return axios.post(this.baseURL + \"/save\", data, config);\n    }\n    static remove(data) {\n        return axios.post(this.baseURL + \"/remove\", data);\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Upload, Button } from \"antd\";\nimport ImgCrop from 'antd-img-crop';\nimport fileService from \"../services/file\";\nimport React from \"react\";\nimport { UploadOutlined } from '@ant-design/icons';\n\nexport default function UploadImage({ fileList, setFileList, count = 1, cropImage = null, disabled = false, listType = \"picture-card\" }) {\n    const uploadImage = async options => {\n        const { onSuccess, onError, file, onProgress } = options;\n\n        const fmData = new FormData();\n        const config = { onUploadProgress: event => { onProgress({ percent: (event.loaded / event.total) * 100 }); } };\n        fmData.append(\"file\", file);\n        try {\n            fileService.save(fmData, config).then(res => {\n                onSuccess(\"Ok\");\n                setFileList([...fileList, { uid: res.data.uid, url: res.data.url, name: res.data.name }]);\n            })\n        } catch (err) {\n            onError({ err });\n        }\n    };\n\n    const handleOnChange = ({ file, fl }) => {\n        if (typeof fl !== typeof []) {\n            fl = [];\n        }\n        setFileList(fl);\n\n    };\n    const handleRemove = (file) => {\n        fileService.remove({ uid: file.uid }).then(res => {\n            // setFileList(fileList?.filter(v => v.uid !== file.uid))\n        })\n    };\n\n    if (cropImage) {\n        if (typeof cropImage !== typeof {}) {\n            cropImage = {};\n        }\n        cropImage.aspect = cropImage.aspect || 1;\n        cropImage.shape = cropImage.shape || 'rect';\n        cropImage.quality = cropImage.quality || 1;\n        return (\n            <ImgCrop rotate aspect shape={cropImage.shape} quality={cropImage.quality} >\n                <Upload\n                    accept=\"image/*\"\n                    customRequest={uploadImage}\n                    onChange={handleOnChange}\n                    onRemove={handleRemove}\n                    listType={listType}\n                    fileList={fileList}\n                    className=\"image-upload-grid\"\n                    disabled={disabled}\n                >\n                    {\n                        fileList?.length >= count\n                            ? null\n                            : listType === 'picture'\n                                ? <Button icon={<UploadOutlined />} type=\"dashed\" >Upload</Button>\n                                : <div>Upload</div>\n                    }\n                </Upload>\n            </ImgCrop>\n        );\n    } else {\n        return <Upload\n            accept=\"image/*\"\n            customRequest={uploadImage}\n            onChange={handleOnChange}\n            onRemove={handleRemove}\n            listType={listType}\n            fileList={fileList}\n            className=\"image-upload-grid\"\n            disabled={disabled}\n        >\n            {\n                fileList?.length >= count\n                    ? null\n                    : listType === 'picture'\n                        ? <Button icon={<UploadOutlined />} type=\"dashed\" >Upload</Button>\n                        : <div>Upload</div>\n            }\n        </Upload>\n    }\n\n};","import { Pagination, Tag } from 'antd';\nexport default function MyPagination(props) {\n    const { qData, setQData } = props;\n\n    const handleChange = (page, pp) => {\n        if (qData.limit !== pp) {\n            setQData({ ...qData, page: 1, limit: pp });\n        } else {\n            setQData({ ...qData, page: page });\n        }\n    }\n\n    const showTotal = () => {\n        let start = (qData.page - 1) * qData.limit * 1 + 1;\n        let end = qData.page * qData.limit;\n        return <Tag>{'Showing ' + start + ' - ' + end + ' out of ' + qData.total}</Tag>\n    }\n    return (\n        <>\n            {\n                qData.total > 0\n                    ? <Pagination\n                        total={qData.total}\n                        showTotal={showTotal}\n                        pageSize={qData.limit}\n                        current={qData.page}\n                        onChange={handleChange}\n                        showSizeChanger={true}\n                    />\n                    : null\n            }\n        </>\n    );\n};\n","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Image, Input } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport Services from '../../services/service';\n\nimport UploadImage from '../../utils/UploadImage';\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\n\n\nexport default function Service() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\n    const addNewModalRef = useRef();\n    const columns = [\n        {\n            title: 'Icon',\n            dataIndex: 'file',\n            width: 50,\n            render: (v) => {\n                return <Image src={v?.url} height={30} />\n            }\n        },\n        {\n            title: 'Name',\n            dataIndex: 'name',\n        },\n        {\n            title: 'Per Hour Rate',\n            dataIndex: 'per_hr_rate',\n            width: 120,\n            render: (v) => <b> ₹ {v} </b>\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this Service?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        Services.listService(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        Services.deleteService(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Services</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n\n    }\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { fileType: 'photo' }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        Services.detailService(data._id).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.file ? [res.data?.file] : []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        Services.saveService(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ file: fileList?.[0] });\n    }, [fileList]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Services'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                // className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Name\" required>\n                                    <Input placeholder=\"name\" value={data.name} onChange={e => { handleChange({ name: e.target.value }) }} />\n                                </Form.Item>\n                                <Form.Item label=\"Per Hour Rate\" required>\n                                    <Input placeholder=\"Per Hour Rate\" type='number' value={data.per_hr_rate} onChange={e => { handleChange({ per_hr_rate: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Icon\">\n                                    <UploadImage {...{ fileList, setFileList }} count={1} listType=\"picture\" />\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'worker';\n\n    static detailWorker(id, data) {\n        return axios.get(this.baseURL + '/details-worker/' + id, { params: data });\n    }\n    static listWorker(data) {\n        return axios.get(this.baseURL + '/list-worker', { params: data });\n    }\n    static saveWorker(data, query) {\n        return axios.post(this.baseURL + \"/save-worker\", data, { params: query });\n    }\n    static deleteWorker(id) {\n        return axios.post(this.baseURL + '/delete-worker', { ids: id });\n    }\n\n}","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'workhistory';\n\n    static listWorkHistory(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Typography } from 'antd';\nimport React, { useEffect, useState, useRef } from 'react';\nimport WorkHistoryService from '../../services/workhistory';\nimport Pagination from '../components/Pagination';\nimport moment from \"moment\"\n\n\nconst viewAccess = true;\n\nexport default function WorkHistory({ workerId = null }) {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, workerId });\n    const addNewModalRef = useRef();\n    const columns = [\n\n        {\n            title: 'Costumer Name',\n            dataIndex: 'userServiceDetail',\n            render: (v) => v?.receiverName\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'userServiceDetail',\n            width: 100,\n            render: (v) => v?.phone\n        },\n        {\n            title: 'Login time',\n            dataIndex: 'login_time',\n            width: 170,\n            render: (v) => <span>{moment(v).format('DD MMM YYYY, h:mm a')}</span>\n        },\n        {\n            title: 'Logout time',\n            dataIndex: 'logout_time',\n            width: 170,\n            render: (v) => <span>{moment(v).format('DD MMM YYYY, h:mm a')}</span>\n        },\n        {\n            title: 'Duration',\n            dataIndex: 'duration',\n            width: 100,\n            render: (v) => <b>{v} min</b>\n        },\n        // {\n        //     title: 'Status',\n        //     dataIndex: 'userServiceDetail',\n        //     width: 100,\n        //     render: (v) => <Tag color='blue'>{v?.status}</Tag>\n        // },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            WorkHistoryService.listWorkHistory(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, qData, setQData, list }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Worker History</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n        </>\n    );\n};\n\nfunction Search({ qData, setQData, list }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                {/* <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col> */}\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Refresh</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    {/* <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    } */}\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n","import axios from \"../utils/axios\";\n\nexport default class accountService {\n\n    static baseURL = 'account';\n\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static save(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    \n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport WorkerService from '../../../services/worker';\nimport Service from '../../../services/service';\nimport UploadImage from '../../../utils/UploadImage';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport WorkHistory from '../WorkHistory';\nimport accountService from '../../../services/account';\n\n\nexport default function WorkerManagement() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, });\n    const addNewModalRef = useRef();\n    const ModelModalRef = useRef();\n    const accountModalRef = useRef();\n    const [service, setService] = useState([]);\n    const columns = [\n        {\n            title: 'Username',\n            dataIndex: 'userName',\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'phone',\n            width: 100,\n        },\n        {\n            title: 'Service',\n            dataIndex: 'serviceDetail',\n            width: 250,\n            render: (service) => service?.map(v => <Tag key={v._id}>{v.name}</Tag>)\n        },\n        {\n            title: 'WorkList',\n            dataIndex: '_id',\n            width: 80,\n            render: (v, row) => {\n                return <>\n                    <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id, userName: row.userName }) }} >Works</Button>\n                </>\n            }\n        },\n        {\n            title: 'Account',\n            dataIndex: '_id',\n            width: 80,\n            render: (v, row) => {\n                return <>\n                    <Button type=\"primary\" size='small' onClick={() => { accountModalRef.current.openForm({ _id: row._id, userName: row.userName }) }} >Account</Button>\n                </>\n            }\n        },\n        {\n            title: 'Rate Per Hour',\n            dataIndex: 'per_hr_rate',\n            width: 120,\n            render: (v) => <b> ₹ {v} </b>\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this Worker?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        WorkerService.listWorker(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n    function listService() {\n        Service.listService()\n            .then(res => { setService(res.data || []); }).catch(err => { AntdMsg('Service data not loaded', 'error'); });\n    }\n\n    const deleteData = (id) => {\n        WorkerService.deleteWorker(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n        listService();\n    }, [qData.page, qData.limit]);\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Workers</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list, service }} />\n            <ModelModal ref={ModelModalRef} />\n            <AccountModal ref={accountModalRef} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n\n    const onChange = (v, key) => {\n        qData[key] = v;\n        if (v === undefined) {\n            qData[key] = \"\";\n            list()\n        }\n    }\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={6}>\n                    <Select\n                        placeholder=\"Please select...\"\n                        allowClear\n                        onChange={e => onChange(e, \"status\")}\n                        style={{\n                            width: '100%',\n                        }}\n                        options={\n                            [\n                                {\n                                    value: true,\n                                    label: \"Registerd\",\n                                },\n                                {\n                                    value: false,\n                                    label: \"Not Registerd\",\n                                }\n                            ]\n                        }\n                    />\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list, service } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [fileList, setFileList] = useState([]);\n    const [aadharImg, setAadharImg] = useState([]);\n    const [nocImg, setNocImg] = useState([]);\n\n\n    const handleChange = (value) => {\n\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n\n    }\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { status: true }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        WorkerService.detailWorker(data._id).then(res => {\n            const presentAddress = res.data?.addressDetail?.find(v => v.workerAddressType === \"present\");\n            const parmanentAddress = res.data?.addressDetail?.find(v => v.workerAddressType === \"parmanent\");\n\n            setData({\n                ...res.data,\n                presentAddress: presentAddress && `${presentAddress?.street1}, ${presentAddress?.street2}, ${presentAddress?.city}, ${presentAddress?.state} (${presentAddress?.pin})`,\n                parmanentAddress: parmanentAddress && `${parmanentAddress?.street1}, ${parmanentAddress?.street2}, ${parmanentAddress?.city}, ${parmanentAddress?.state} (${parmanentAddress?.pin})`,\n            } || {});\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\n            setAadharImg(res.data?.aadharImage ? [res.data?.aadharImage] : []);\n            setNocImg(res.data?.nocImage ? [res.data?.nocImage] : []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        WorkerService.saveWorker(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false)\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        } else {\n            setFileList([]);\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setFileList([]);\n            setAadharImg([]);\n            setNocImg([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ avatar: fileList?.[0] });\n        handleChange({ aadharImage: aadharImg?.[0] });\n        handleChange({ nocImage: nocImg?.[0] });\n    }, [fileList, aadharImg, nocImg]);\n\n    return (\n        <>\n\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Worker'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={800}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={20}>\n                                <Row gutter={[12, 2]}>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Username\" required>\n                                            <Input placeholder=\"John Doe\" value={data.userName} onChange={e => { handleChange({ userName: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n\n                                    <Col span={12}>\n                                        <Form.Item label=\"Phone\" required>\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={24}>\n                                        <Form.Item label=\"Service\" required>\n                                            <Select\n                                                mode=\"multiple\"\n                                                value={data.serviceIds}\n                                                placeholder=\"Please select...\"\n                                                onChange={e => { handleChange({ serviceIds: e }) }}\n                                                style={{\n                                                    width: '100%',\n                                                }}\n                                                options={\n                                                    service.map(v => (\n                                                        {\n                                                            value: v._id,\n                                                            label: v.name,\n                                                        }\n                                                    ))\n                                                }\n                                            />\n                                        </Form.Item>\n                                    </Col>\n\n                                </Row>\n                            </Col>\n                            <Col span={4}>\n                                <Form.Item label=\"Avatar\">\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\n                                </Form.Item>\n                            </Col>\n\n                            <Col span={24}>\n                                <Form.Item label=\"Present Address\">\n                                    <Input.TextArea placeholder=\"Present Address\" value={data.presentAddress} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={24}>\n                                <Form.Item label=\"Permanent Address\">\n                                    <Input.TextArea placeholder=\"Permanent Address\" value={data.parmanentAddress} disabled />\n                                </Form.Item>\n                            </Col>\n                            <Col span={6}>\n                                <Form.Item label=\"Aadhar Image\">\n                                    <UploadImage {...{ fileList: aadharImg, setFileList: setAadharImg }} count={1} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"NOC Image\">\n                                    <UploadImage {...{ fileList: nocImg, setFileList: setNocImg }} count={1} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={10}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Per Hour Rate\" required>\n                                    <Input placeholder=\"Per Hour Rate\" value={data.per_hr_rate} onChange={e => { handleChange({ per_hr_rate: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\nconst ModelModal = forwardRef((props, ref) => {\n\n\n\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt ? { ...dt } : { status: true });\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={<>All Works of <Typography.Text type=\"danger\">{data?.userName}</Typography.Text></>}\n                style={{ top: 20 }}\n                open={open}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                ]}\n            >\n                <WorkHistory {...{ workerId: data._id }} />\n            </Modal>\n        </>\n    );\n});\nconst AccountModal = forwardRef((props, ref) => {\n\n\n\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n    const [modalData, setModalData] = useState({});\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setModalData(dt ? { ...dt } : { status: true });\n        }\n    }));\n\n    const handleChange = (value) => {\n\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n\n    }\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        accountService.detail(modalData._id).then(res => {\n            setData(res.data || {});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        accountService.save({ ...data, workerId: modalData._id }).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            setOpen(false)\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (modalData?._id) {\n            getDetails();\n        }\n    }, [modalData._id]);\n\n\n    return (\n        <>\n            <Modal\n                title={<>Bank Account Details of:  <Typography.Text type=\"danger\">{modalData?.userName}</Typography.Text></>}\n                style={{ top: 20 }}\n                open={open}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={700}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 0]}>\n                            <Col span={24}>\n                                <Form.Item label=\"Bank Name\" required>\n                                    <Input placeholder=\"Bank Of India\" value={data.bankName} onChange={e => { handleChange({ bankName: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Holder Name\">\n                                    <Input placeholder=\"John Doe\" value={data.holderName} onChange={e => { handleChange({ holderName: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Account Number\">\n                                    <Input placeholder=\"BOI1100XXX0564X\" value={data.accountNumber} onChange={e => { handleChange({ accountNumber: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"IFSC code\">\n                                    <Input placeholder=\"Permanent Address\" value={data.IFSC} onChange={e => { handleChange({ IFSC: e.target.value }) }} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={12}>\n                                <Form.Item label=\"Account Type\" required>\n                                    <Select value={data.accountType} onChange={e => { handleChange({ accountType: e }) }} >\n                                        <Select.Option value={\"saving\"}>Saving</Select.Option>\n                                        <Select.Option value={\"current\"}>Current</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'user';\n\n    static detailUser(id, data) {\n        return axios.get(this.baseURL + '/details-user/' + id, { params: data });\n    }\n    static listUser(data) {\n        return axios.get(this.baseURL + '/list-user', { params: data });\n    }\n    static saveUser(data, query) {\n        return axios.post(this.baseURL + \"/save-user\", data, { params: query });\n    }\n    static deleteUser(id) {\n        return axios.post(this.baseURL + '/delete-user', { ids: id });\n    }\n\n}","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'userservice';\n\n    static detailJob(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static listJob(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static saveJob(data, query) {\n        return axios.post(this.baseURL + \"/save\", data, { params: query });\n    }\n    static deleteJob(id) {\n        return axios.post(this.baseURL + '/delete', { ids: id });\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Typography, Select, Descriptions, Tag } from 'antd';\nimport React, { useEffect, useState, useRef } from 'react';\nimport jobService from '../../services/job';\nimport UserService from '../../services/user';\nimport moment from \"moment\"\nimport Pagination from '../components/Pagination';\n\nexport default function JobList({ userId = null }) {\n\n    const [data, setData] = useState([]);\n    const [user, setUser] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, userId });\n    const addNewModalRef = useRef();\n    const columns = [\n        {\n            title: 'Receiver Name',\n            dataIndex: 'receiverName',\n            width: 300,\n        },\n        {\n            title: 'User Name',\n            dataIndex: 'userDetails',\n            width: 200,\n            render: v => v?.userName\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'phone',\n            width: 100,\n        },\n        {\n            title: 'Service',\n            dataIndex: 'serviceDetail',\n            width: 200,\n            render: (v) => v?.name\n        },\n        {\n            title: 'Date Choosen',\n            dataIndex: 'selectedDate',\n            render: (sd) => sd?.map(v => <Tag key={v}>{moment(v).format('DD MMM YYYY')}</Tag>)\n        },\n        {\n            title: 'Time Choosen',\n            dataIndex: 'selectedTime',\n            render: (sd) => sd?.map((v, i) => <Tag key={v._id}>{moment(v.startTime).format('h:mm a')} - {moment(v.endTime).format('h:mm a')}</Tag>)\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 150,\n            render: v => <Tag color='blue'>{v}</Tag>\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        jobService.listJob(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    function userlist() {\n        setLoading(true);\n        UserService.listUser(qData).then(res => {\n            setUser(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, qData, setQData, list, userId, users: user }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n\n    useEffect(() => {\n        userlist();\n    }, [])\n\n    return (\n        <>\n            {\n                userId\n                    ? null\n                    : <Typography.Title level={5} style={{ marginTop: 0 }}>List of Jobs</Typography.Title>\n            }\n\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n                expandable={{\n                    expandedRowRender: (record) => (\n                        <Descriptions title=\"Job Info\">\n                            <Descriptions.Item label=\"WorkerName\">{record?.workerDetail ? record?.workerDetail.userName : 'Not Accepted'}</Descriptions.Item>\n                            <Descriptions.Item label=\"Worker Phone\">{record?.workerDetail ? record?.workerDetail.phone : 'Empty'}</Descriptions.Item>\n                            <Descriptions.Item label=\"Live\">{record.addressDetail.state}</Descriptions.Item>\n                            <Descriptions.Item label=\"Remark\">empty</Descriptions.Item>\n                            <Descriptions.Item label=\"Address\">\n                                {record.addressDetail.street1} ,{record.addressDetail.street2} ,{record.addressDetail.city}\n                            </Descriptions.Item>\n                        </Descriptions>\n                    ),\n                    rowExpandable: (record) => record.receiverName !== 'Not Expandable',\n                }}\n            />\n        </>\n    );\n};\n\nfunction Search({ qData, setQData, userId, list, users }) {\n\n    const [userNames, setUserNames] = useState([]);\n\n    const onChange = (v, key) => {\n        qData[key] = v;\n        if (v === undefined) {\n            qData[key] = \"\";\n            list()\n        }\n    }\n\n    useEffect(() => {\n        const Names = users?.map((item) => (\n            {\n                label: item.userName ? <><p style={{ padding: \"0px\", margin: \"0px\" }}>{item.userName}</p><p style={{ fontSize: \"12px\", margin: \"0px\" }}><Typography.Text type=\"danger\">@{item.phone}</Typography.Text></p></> : item.phone,\n                value: item.userName ? item.userName : item.phone,\n                searchKey: item.userName + item.phone\n            }\n        ))\n        setUserNames(Names)\n    }, [users])\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                {\n                    !userId &&\n                    <>\n                        <Col span={4}>\n                            <Form.Item style={{ marginBottom: 0 }}>\n                                <Select\n                                    showSearch\n                                    allowClear\n                                    placeholder=\"Select by username / phone\"\n                                    optionFilterProp=\"children\"\n                                    onChange={(e) => onChange(e, \"key\")}\n                                    filterOption={(input, option) =>\n                                        (option?.searchKey ?? '').toLowerCase().includes(input.toLowerCase())\n                                    }\n                                    options={userNames}\n                                />\n                            </Form.Item>\n                        </Col>\n                        {/* <Col span={8}>\n                            <Form.Item style={{ marginBottom: 0 }}>\n                                <DatePicker.RangePicker\n                                    format=\"DD MMM YYYY\"\n                                    style={{ width: '100%' }}\n                                    value={[qData?.startDate, qData?.endDate]}\n                                    onChange={v => (setQData({ ...qData, startDate: v?.[0], endDate: v?.[1] }))}\n                                    allowClear={true}\n                                />\n                            </Form.Item>\n                        </Col> */}\n                        <Col span={3}>\n                            <Form.Item style={{ marginBottom: 0 }}>\n                                <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                            </Form.Item>\n                        </Col>\n                    </>\n                }\n                <Col span={5}>\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image, Input, Tag } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined, EyeOutlined, PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport UserService from '../../../services/user';\nimport UploadImage from '../../../utils/UploadImage';\nimport Pagination from '../../components/Pagination';\nimport { AntdMsg } from '../../../utils/Antd';\nimport JobList from '../JobList';\n\n\nexport default function UserManagement() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\n    const addNewModalRef = useRef();\n    const ModelModalRef = useRef();\n    const columns = [\n        {\n            title: 'Username',\n            dataIndex: 'userName',\n\n        },\n        {\n            title: 'Phone',\n            dataIndex: 'phone',\n            width: 100,\n        },\n        {\n            title: 'Email',\n            dataIndex: 'email',\n            width: 200,\n        },\n        {\n            title: 'Job',\n            dataIndex: '_id',\n            width: 80,\n            render: (v, row) => <Button type=\"primary\" size='small' onClick={() => { ModelModalRef.current.openForm({ _id: row._id, userName: row.userName }) }} >Jobs</Button>\n        },\n        {\n            title: 'Status',\n            dataIndex: 'status',\n            width: 80,\n            render: isActive => {\n                if (isActive) {\n                    return <Tag color='green'>Active</Tag>\n                } else {\n                    return <Tag color='red'>Inactive</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this User?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        setLoading(true);\n        UserService.listUser(qData).then(res => {\n            setData(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        UserService.deleteUser(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list,}} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Users</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n            <ModelModal ref={ModelModalRef} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, }) {\n\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Input placeholder=\"Search by name or code\" value={qData.key} onChange={e => (setQData({ ...qData, key: e.target.value }))} allowClear />\n                    </Form.Item>\n                </Col>\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n\n    }\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { fileType: 'photo' }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        UserService.detailUser(data._id).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.avatar ? [res.data?.avatar] : []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        UserService.saveUser(data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ avatar: fileList?.[0] });\n    }, [fileList]);\n\n    return (\n        <>\n\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' User'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={800}\n                className=\"app-modal-body\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>,\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={20}>\n                                <Row gutter={[12, 2]}>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Username\" required>\n                                            <Input placeholder=\"John Doe\" value={data.userName} onChange={e => { handleChange({ userName: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n\n                                    <Col span={12}>\n                                        <Form.Item label=\"Email\" required>\n                                            <Input placeholder=\"Email\" value={data.email} onChange={e => { handleChange({ email: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                    <Col span={12}>\n                                        <Form.Item label=\"Phone\" required>\n                                            <Input placeholder=\"Phone\" value={data.phone} onChange={e => { handleChange({ phone: e.target.value }) }} />\n                                        </Form.Item>\n                                    </Col>\n                                </Row>\n                            </Col>\n                            <Col span={4}>\n                                <Form.Item label=\"Avatar\">\n                                    <UploadImage {...{ fileList, setFileList }} count={1} />\n                                </Form.Item>\n                            </Col>\n                            <Col span={10}>\n                                <Form.Item label=\"Status\" required>\n                                    <Select value={data.status} onChange={e => { handleChange({ status: e.target.value }) }} >\n                                        <Select.Option value={true}>Active</Select.Option>\n                                        <Select.Option value={false}>Inactive</Select.Option>\n                                    </Select>\n                                </Form.Item>\n                            </Col>\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});\n\nconst ModelModal = forwardRef((props, ref) => {\n\n\n\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({});\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(dt ? { ...dt } : { status: true });\n        }\n    }));\n\n    return (\n        <>\n            <Modal\n                title={<>All Job List of <Typography.Text type=\"danger\">{data?.userName}</Typography.Text></>}\n                style={{ top: 20 }}\n                open={open}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={1600}\n                className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                ]}\n            >\n                <JobList {...{ userId: data._id }} />\n            </Modal>\n        </>\n    );\n});","import axios from \"../utils/axios\";\n\nexport default class service {\n\n    static baseURL = 'leave';\n\n    static list(data) {\n        return axios.get(this.baseURL + '/list', { params: data });\n    }\n    static detail(id, data) {\n        return axios.get(this.baseURL + '/details/' + id, { params: data });\n    }\n    static save(data, config) {\n        return axios.post(this.baseURL + \"/save\", data, config);\n    }\n    static approve(id, data) {\n        return axios.post(this.baseURL + \"/approve/\" + id, data);\n    }\n\n}","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Table, Button, Form, Row, Col, Popconfirm, Modal, Spin, Typography, Select, Image,  Tag,  Radio, Divider, DatePicker } from 'antd';\nimport { DeleteOutlined, EditOutlined, LoadingOutlined,PlusOutlined } from '@ant-design/icons';\nimport React, { useEffect, useState, forwardRef, useImperativeHandle, useRef } from 'react';\nimport Services from '../../services/leave';\nimport workerService from '../../services/worker';\nimport moment from \"moment\"\nimport Pagination from '../components/Pagination';\nimport { AntdMsg } from '../../utils/Antd';\n\nconst viewAccess = true;\n\nexport default function Leave() {\n\n    const [data, setData] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [selected, setSelected] = useState([]);\n    const [worker, setWorker] = useState([]);\n    const [qData, setQData] = useState({ page: 1, limit: 20, fileType: 'photo' });\n    const addNewModalRef = useRef();\n    const columns = [\n        {\n            title: 'Worker Name',\n            dataIndex: 'workerDetail',\n        },\n        {\n            title: 'Reason',\n            dataIndex: 'reason',\n            width: 250,\n        },\n        {\n            title: 'Start Date',\n            dataIndex: 'startDate',\n            width: 150,\n            render: (v) => <span>{moment(v).format('DD MMM YYYY')}</span> \n        },\n        {\n            title: 'End Date',\n            dataIndex: 'endDate',\n            width: 150,\n            render: (v) => <span>{moment(v).format('DD MMM YYYY')}</span> \n        },\n        {\n            title: 'Prescription',\n            dataIndex: 'precipition',\n            width: 100,\n            render: (v) => <Image src={v?.url} height={32} />\n        },\n        {\n            title: 'Status',\n            dataIndex: 'isApproved',\n            width: 150,\n            render: (_, row) => {\n                if (row.status === \"Approved\") {\n                    return <Tag color='green'>Approved</Tag>\n                } else if (row.status === \"Rejected\") {\n                    return <Tag color='red'>Rejected</Tag>\n                }\n                else {\n                    return <Tag color='blue'>Requested</Tag>\n                }\n            },\n        },\n        {\n            title: 'Action',\n            dataIndex: '_id',\n            width: 70,\n            render: (v, row) => {\n                return <>\n                    <Popconfirm\n                        title=\"Are you sure to delete this Service?\"\n                        onConfirm={() => { deleteData(row._id); }}\n                        okText=\"Yes\"\n                        cancelText=\"No\"\n                    >\n                        <Button type=\"primary\" size='small' danger icon={<DeleteOutlined />} />&nbsp;\n                    </Popconfirm>\n                    <Button type=\"primary\" size='small' icon={<EditOutlined />} onClick={() => { addNewModalRef.current.openForm(row._id) }} />\n                </>\n            }\n        },\n    ].filter(item => !item.hidden);\n\n    function list() {\n        if (viewAccess) {\n            setLoading(true);\n            Services.list(qData).then(res => {\n                setData(res.data?.map((v) => ({ ...v, key: v._id })));\n                setQData({ ...qData, limit: res.extra.limit, page: res.extra.page, total: res.extra.total });\n            }).catch(err => { }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n    function workerlist() {\n        setLoading(true);\n        workerService.listWorker(qData).then(res => {\n            setWorker(res.data?.map((v) => ({ ...v, key: v._id })));\n            setQData({ ...qData, isAll: 1 });\n        }).catch(err => { }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    const deleteData = (id) => {\n        Services.deleteService(id).then(res => {\n            AntdMsg(res.message);\n            list();\n            setSelected([]);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        })\n    }\n\n    const tableColumns = columns.map((item) => ({ ...item, ellipsis: false }));\n\n    tableColumns[0].fixed = true;\n    tableColumns[tableColumns.length - 1].fixed = 'right';\n\n    const tableProps = {\n        bordered: true,\n        loading,\n        size: 'small',\n        title: () => <Search {...{ addNewModalRef, selected, deleteData, qData, setQData, list, workers: worker }} />,\n        showHeader: true,\n        footer: () => <Pagination {...{ qData, setQData }} />,\n        rowSelection: {\n            onChange: (selectedRowKeys) => {\n                setSelected(selectedRowKeys);\n            },\n        },\n        tableLayout: undefined,\n    };\n\n    useEffect(() => {\n        list();\n    }, [qData.page, qData.limit]);\n\n    useEffect(() => {\n        workerlist();\n    }, [])\n\n    return (\n        <>\n            <Typography.Title level={5} style={{ marginTop: 0 }}>List of Leave Requests</Typography.Title>\n            <Table\n                {...tableProps}\n                pagination={{ position: ['none'], pageSize: qData.limit }}\n                columns={tableColumns}\n                dataSource={data.length ? data : []}\n                scroll={{ y: 'calc(100vh - 340px)', x: 'calc(100vw - 387px)' }}\n            />\n            <AddForm ref={addNewModalRef} {...{ list }} />\n        </>\n    );\n};\n\nfunction Search({ addNewModalRef, selected, deleteData, qData, setQData, list, workers }) {\n\n    const [userNames, setUserNames] = useState([]);\n\n    const onChange = (v, key) => {\n        qData[key] = v;\n        if (v === undefined) {\n            qData[key] = \"\";\n            list()\n        }\n    }\n\n    useEffect(() => {\n        const Names = workers?.map((item) => (\n            {\n                label: item.userName ? <><p style={{ padding: \"0px\", margin: \"0px\" }}>{item.userName}</p><p style={{ fontSize: \"12px\", margin: \"0px\" }}><Typography.Text type=\"danger\">@{item.phone}</Typography.Text></p></> : item.phone,\n                value: item.userName ? item.userName : item.phone,\n                searchKey: item.userName + item.phone\n            }\n        ))\n        setUserNames(Names)\n    }, [workers])\n    return (\n        <Form onSubmitCapture={list} className=\"search-form\">\n            <Row gutter={[12, 2]}>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Select\n                            showSearch\n                            allowClear\n                            placeholder=\"Select by username / phone\"\n                            optionFilterProp=\"children\"\n                            onChange={(e) => onChange(e, \"userName\")}\n                            filterOption={(input, option) =>\n                                (option?.searchKey ?? '').toLowerCase().includes(input.toLowerCase())\n                            }\n                            options={userNames}\n                        />\n                    </Form.Item>\n                </Col>\n                <Col span={4}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Select\n                            placeholder=\"Select Type...\"\n                            onChange={(v) => onChange(v, 'status')}\n                            allowClear\n                            options={[\n                                {\n                                    value: \"Approved\",\n                                    label: 'Approved',\n                                },\n                                {\n                                    value: \"Rejected\",\n                                    label: 'Rejected',\n                                },\n                                {\n                                    value: \"Requested\",\n                                    label: 'Requested',\n                                },\n\n                            ]}\n                        />\n                    </Form.Item>\n                </Col>\n                {/* <Col span={8}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <DatePicker.RangePicker\n                            style={{ width: '100%' }}\n                            onChange={v => onChange(v, 'DateKey')} allowClear\n                        />\n                    </Form.Item>\n                </Col> */}\n                <Col span={3}>\n                    <Form.Item style={{ marginBottom: 0 }}>\n                        <Button type=\"primary\" htmlType=\"submit\">Search</Button>\n                    </Form.Item>\n                </Col>\n                <Col span={5}>\n                    <Form.Item style={{ marginBottom: 0, float: 'right' }}>\n                        <Button type=\"primary\" icon={<PlusOutlined />} onClick={() => { addNewModalRef.current.openForm() }}>Add New</Button>\n                    </Form.Item>\n                    {\n                        selected.length\n                            ? <Popconfirm\n                                title=\"Are you sure to delete these selected images?. Be sure to delete the image from server.\"\n                                onConfirm={() => { deleteData(selected); }}\n                                okText=\"Yes\"\n                                cancelText=\"No\"\n                            >\n                                <Button type=\"primary\" danger style={{ float: 'right' }} icon={<DeleteOutlined />}>Delete Selected</Button>\n                            </Popconfirm>\n                            : null\n                    }\n\n                </Col>\n            </Row>\n        </Form>\n    );\n};\n\nconst AddForm = forwardRef((props, ref) => {\n    const { list } = props;\n    const [open, setOpen] = useState(false);\n    const [data, setData] = useState({ aspect: 1 });\n    const [ajxRequesting, setAjxRequesting] = useState(false);\n    const [fileList, setFileList] = useState([]);\n\n\n    const handleChange = (value) => {\n\n        Object.entries(value).forEach(ent => {\n            let varDt = data;\n            const k = ent[0];\n            const v = ent[1];\n            let keys = k.split('.');\n            for (let i = 0; i < keys.length; i++) {\n                if (i + 1 === keys.length) {\n                    varDt[keys[i]] = v;\n                } else {\n                    if (typeof varDt[keys[i]] === 'undefined') {\n                        if (parseInt(keys[i + 1]) * 1 >= 0) {\n                            varDt[keys[i]] = [];\n                        } else {\n                            varDt[keys[i]] = {};\n                        }\n                    } varDt = varDt[keys[i]];\n                }\n            }\n        });\n        setData({ ...data });\n\n    }\n\n\n    useImperativeHandle(ref, () => ({\n        openForm(dt) {\n            setOpen(true);\n            setData(\n                dt\n                    ? { _id: dt }\n                    : { fileType: 'photo' }\n            );\n        }\n    }));\n\n    const getDetails = () => {\n        setAjxRequesting(true);\n        Services.detail(data._id).then(res => {\n            setData(res.data || {});\n            setFileList(res.data?.file ? [res.data?.file] : []);\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n    }\n\n    const save = () => {\n        setAjxRequesting(true);\n        Services.approve(data._id, data).then((res) => {\n            AntdMsg(res.message);\n            handleChange({ ...res.data });\n            list();\n            setOpen(false);\n        }).catch(err => {\n            if (typeof err.message === 'object') {\n                let dt = err.message[Object.keys(err.message)[0]];\n                AntdMsg(dt, 'error');\n            } else {\n                AntdMsg(err.message, 'error');\n            }\n        }).finally(() => {\n            setAjxRequesting(false);\n        });\n\n    }\n\n    useEffect(() => {\n        if (data._id) {\n            getDetails();\n        }\n    }, [data._id]);\n\n    useEffect(() => {\n        if (!open) {\n            setData({ _id: null });\n        } else {\n            setFileList([]);\n        }\n    }, [open]);\n\n    useEffect(() => {\n        handleChange({ file: fileList?.[0] });\n    }, [fileList]);\n\n    return (\n        <>\n            <Modal\n                title={(!data._id ? 'Add' : 'Edit') + ' Leave'}\n                style={{ top: 20 }}\n                open={open}\n                okText=\"Save\"\n                onOk={save}\n                okButtonProps={{ disabled: ajxRequesting }}\n                onCancel={() => { setOpen(false); }}\n                destroyOnClose\n                maskClosable={false}\n                width={500}\n                // className=\"app-modal-body-overflow\"\n                footer={[\n                    <Button key=\"cancel\" onClick={() => { setOpen(false); }}>Cancel</Button>,\n                    <Button key=\"save\" type=\"primary\" onClick={save}>Save</Button>\n                ]}\n            >\n                <Spin spinning={ajxRequesting} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                    <Form layout=\"vertical\">\n                        <Row gutter={[12, 2]}>\n                            <Col span={6}>\n                                <Divider orientation=\"left\">Leave Application Status</Divider>\n                                <Radio.Group onChange={(e) => handleChange({ status: e.target.value })} value={data.status} style={{ display: \"flex\", gap: \"20px\", alignItems: \"center\" }} >\n                                    <Radio value=\"Approved\">Approved</Radio>\n                                    <Radio value=\"Requested\">Requested</Radio>\n                                    <Radio value=\"Rejected\">Rejected</Radio>\n                                </Radio.Group>\n\n                            </Col>\n                            <Col span={24}>\n                                <Divider orientation=\"left\">Leave Date</Divider>\n                                <DatePicker.RangePicker\n                                    style={{ width: '100%' }}\n                                    value={[moment(data.startDate), moment(data.endDate)]}\n                                    onChange={v => handleChange({ startDate: new Date(v[0]), endDate: new Date(v[1]) })} allowClear\n                                />\n\n                            </Col>\n\n                        </Row>\n                    </Form>\n                </Spin>\n            </Modal>\n        </>\n    );\n});","import { DashboardOutlined, BankOutlined, ApartmentOutlined, CalendarOutlined } from '@ant-design/icons';\n\nimport Dashboard from '../pages/Dashboard';\nimport Setting from \"../pages/Setting\"\nimport Service from '../pages/Service';\nimport WorkerManagement from '../pages/management/workerManagement';\nimport UserManagement from '../pages/management/userManagement';\nimport JobList from '../pages/JobList';\nimport WorkHistory from '../pages/WorkHistory';\nimport Leave from '../pages/Leave';\nimport Profile from '../pages/admin/Profile';\nimport ChangePassword from '../pages/admin/Change-password';\n\n\nconst routes = [\n    { title: 'Dashboard', icon: DashboardOutlined, url: '/', component: Dashboard },\n    { title: 'Service', icon: ApartmentOutlined, url: '/service', component: Service },\n    { title: 'Job List', icon: ApartmentOutlined, url: '/job-list', component: JobList },\n    {\n        title: 'Management', icon: BankOutlined, url: '/management', children: [\n            { title: 'User', icon: ApartmentOutlined, url: '/', component: UserManagement },\n            { title: 'Worker', icon: ApartmentOutlined, url: '/Worker', component: WorkerManagement },\n        ]\n    },\n    { title: 'Working History', icon: CalendarOutlined, url: '/work-history', component: WorkHistory },\n    { title: 'Leave Requests', icon: CalendarOutlined, url: '/leave', component: Leave },\n    { title: 'Settings', icon: CalendarOutlined, url: '/Setting', component: Setting },\n    {\n        title: 'You', icon: ApartmentOutlined, url: '/profile', children: [\n            { title: 'Profile', icon: ApartmentOutlined, url: '/', component: Profile },\n            { title: 'Change Password', icon: ApartmentOutlined, url: '/change-password', component:ChangePassword },\n        ]\n    },\n].filter(v => (!v.hidden) || v.children?.length);\n\nexport default routes;","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Form, Spin, Row, Col , Typography, Divider, Switch } from 'antd';\nimport { PageHeader } from '@ant-design/pro-layout'\nimport { LoadingOutlined } from '@ant-design/icons';\nimport greetingTime from 'greeting-time';\n\nimport React, { useEffect, useState } from 'react';\nimport service from '../../../services/admin';\nimport { AntdMsg } from '../../../utils/Antd';\nimport UploadImage from '../../../utils/UploadImage';\n\nexport default function Profile() {\n\n    const [data, setData] = useState({});\n    const [fileList, setFileList] = useState([]);\n    const [loading, setLoading] = useState(false);\n    const [doSave, setDoSave] = useState(false);\n\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\n\n    function list() {\n        setLoading(true);\n        service.profile().then(res => {\n            setData(res.data.result || {});\n            if (res.data.result?.avatar) {\n                setFileList([res.data.result?.avatar]);\n            }\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    useEffect(() => {\n        list();\n    }, []);\n\n    useEffect(() => {\n        updateProfile();\n    }, [data]);\n\n    function updateProfile() {\n        if (doSave) {\n            setLoading(true);\n            service.saveProfile(data).then(res => {\n                AntdMsg(res.message);\n            }).catch(err => {\n                AntdMsg(err.message, 'error');\n            }).finally(() => {\n                setLoading(false);\n            });\n        }\n    }\n\n    useEffect(() => {\n        handleChange(fileList?.[0], 'avatar');\n    }, [fileList]);\n\n    return (\n        <>\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                <PageHeader \n                    title={greetingTime(new Date()) + ', ' + data?.name}\n                    extra={[<Switch key={'do-save'} checkedChildren=\"Update\" unCheckedChildren=\"Update\" checked={doSave} onChange={v => { setDoSave(v) }} />]}\n                />\n                <Divider />\n                <Form layout=\"vertical\">\n                    <Row gutter={[12, 2]}>\n                        <Col span={16}>\n                            <Row gutter={[12, 10]}>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Name</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'name'); } }} level={5} >\n                                            {data.name}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">User Name</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'userName'); } }} level={5} >\n                                            {data.userName}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Email</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'email'); } }} level={5} >\n                                            {data.email}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                                <Col span={12}>\n                                    <Form.Item label={<Typography.Text strong type=\"secondary\">Phone Number</Typography.Text>}>\n                                        <Typography.Title editable={{ editing: doSave, triggerType: doSave ? 'icon' : 'text', onChange: (v) => { handleChange(v, 'phone'); } }} level={5} >\n                                            {data.phone}\n                                        </Typography.Title>\n                                        <Divider style={{ margin: 0 }} />\n                                    </Form.Item>\n                                </Col>\n                            </Row>\n                        </Col>\n                        <Col span={8}>\n                            <UploadImage {...{ fileList, setFileList }} disabled={!doSave} cropImage />\n\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </>\n    );\n};","/* eslint-disable react-hooks/exhaustive-deps */\nimport { Form, Spin, Row, Col, Divider, Input, Button } from 'antd';\nimport { LoadingOutlined } from '@ant-design/icons';\nimport greetingTime from 'greeting-time';\nimport { PageHeader } from '@ant-design/pro-layout'\n\nimport React, { useState } from 'react';\nimport service from '../../../services/admin';\nimport { AntdMsg } from '../../../utils/Antd';\nimport commonObj from '../../../commonObj';\n\nexport default function ChangePassword() {\n\n    const [data, setData] = useState({name: commonObj.name});\n    const [loading, setLoading] = useState(false);\n\n    const handleChange = (v, k) => { setData({ ...data, [k]: v }); }\n\n    function save() {\n        setLoading(true);\n        service.updatePassword(data).then(res => {\n            AntdMsg(res.message);\n            setData({});\n        }).catch(err => {\n            AntdMsg(err.message, 'error');\n        }).finally(() => {\n            setLoading(false);\n        });\n    }\n\n    return (\n        <>\n            <Spin spinning={loading} indicator={<LoadingOutlined style={{ fontSize: 24 }} spin />}>\n                <PageHeader title={greetingTime(new Date()) + ', ' + data?.name} />\n                <Divider />\n                <Form layout=\"vertical\">\n                    <Row gutter={[12, 2]}>\n                        <Col span={8}>\n                            <Form.Item label=\"Current Password\">\n                                <Input.Password placeholder=\"Current Password\" value={data.currentPassword} onChange={e => { handleChange(e.target.value, 'currentPassword'); }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={16}></Col>\n\n                        <Col span={8}>\n                            <Form.Item label=\"New Password\">\n                                <Input.Password placeholder=\"New Password\" value={data.newPassword} onChange={e => { handleChange(e.target.value, 'newPassword'); }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={16}></Col>\n                        <Col span={8}>\n                            <Form.Item label=\"Confirm New Password\">\n                                <Input.Password placeholder=\"Confirm New Password\" value={data.confirmNewPassword} onChange={e => { handleChange(e.target.value, 'confirmNewPassword'); }} />\n                            </Form.Item>\n                        </Col>\n                        <Col span={16}></Col>\n                        <Col span={8}>\n                            <Form.Item>\n                                {\n                                    data.currentPassword && data.newPassword && data.confirmNewPassword\n                                        ? <Button type=\"primary\" style={{ width: '100%' }} htmlType=\"submit\" onClick={save} >Update Password</Button>\n                                        : null\n                                }\n                            </Form.Item>\n                        </Col>\n                    </Row>\n                </Form>\n            </Spin>\n        </>\n    );\n};","import { Menu } from 'antd';\nimport React from 'react';\nimport routes from './route';\nimport { Link, useLocation } from 'react-router-dom';\nimport { LogoutOutlined } from '@ant-design/icons';\n\n\nconst items = [...routes];\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\n    arr.forEach((v, i) => {\n        if (v.children?.length) {\n            arr[i] = {\n                ...arr[i],\n                key: prevBaseUrl + v.url,\n                icon: <v.icon />,\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\n            }\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\n        } else {\n            arr[i] = {\n                ...v,\n                key: prevBaseUrl + v.url,\n                icon: <v.icon />,\n                label: <Link className=\"text-d-none\" to={(prevBaseUrl + v.url)}>{v.title}</Link>\n            }\n        }\n    })\n}\nconvertMultiToSingle(items);\n\nitems.push(\n    {\n        label: 'Logout',\n        icon: <LogoutOutlined />,\n        key: 'logout',\n        style: { color: 'red' },\n        onClick: () => { window.localStorage.clear(); window.location.reload(); },\n        component: <></>\n    }\n);\n\nconst App = () => {\n    const paths = [];\n    useLocation().pathname.split('/')?.reduce((prev, cur) => {\n        paths.push(prev + '/' + cur);\n        return prev + '/' + cur;\n    });\n\n    return (\n        <>\n            {\n                <Menu\n                    defaultSelectedKeys={[paths.pop()]}\n                    defaultOpenKeys={[...paths]}\n                    mode=\"horizontal\"\n                    theme=\"dark\"\n                    items={items}\n                // style={{ height: '100vh' }}\n                />\n            }\n        </>\n    );\n};\n\nexport default App;","import { Result, Button } from 'antd';\nimport { Link } from 'react-router-dom';\n\n\nexport default function Error404() {\n    return (\n        <Result\n            status=\"404\"\n            title=\"404\"\n            subTitle=\"Sorry, the page you visited does not exist.\"\n            extra={<Link to=\"/\"><Button type=\"primary\">Back Home</Button></Link>}\n        />\n    );\n}\n\n","import React, { useState } from \"react\";\nimport { Card, Layout } from \"antd\";\nimport { Routes, Route } from \"react-router-dom\";\nimport Menu from \"./Menu\";\nimport routes from \"./route\";\nimport Error404 from \"../pages/errors/Error404\";\n\n\nconst newRoutes = [];\nfunction convertMultiToSingle(arr, prevBaseUrl = '') {\n    arr.forEach(v => {\n        if (v.children) {\n            convertMultiToSingle(v.children, prevBaseUrl + v.url);\n        } else {\n            newRoutes.push({ ...v, url: prevBaseUrl + v.url })\n        }\n    })\n}\nconvertMultiToSingle([...routes]);\n\n\nexport default function MyLayout() {\n    const [collapsed, setCollapsed] = useState(false);\n\n    return (\n        <>\n            <Layout style={{ minHeight: '100vh' }}>\n                {/* <Layout.Sider\n                    width={250}\n                    collapsible collapsed={collapsed} onCollapse={(value) => setCollapsed(value)}\n                    style={{\n                        overflow: 'auto',\n                        height: '100vh',\n                        position: 'fixed',\n                        left: 0,\n                        top: 0,\n                        bottom: 0,\n                        maxWidth: '300px!important',\n                        width: '300px!important'\n                    }}\n                >\n                    <div className=\"logo\" />\n                    <Menu />\n                </Layout.Sider>routes */}\n                <Layout className=\"site-layout\">\n                    {/* <Top /> */}\n                    <Menu />\n\n\n                    <Layout.Content\n                        style={{\n                            margin: '24px 40px 0 40px',\n                            // overflow: 'initial',\n                            // marginLeft: !collapsed ? '230px' : '60px'\n                        }}\n                    >\n                        {/* <Breadcrumb /> */}\n                        <Card bordered>\n                            <Routes>\n                                {newRoutes.filter(v => v.key !== 'logout').map((v) => <Route path={v.url} key={v.url} element={<v.component />} />)}\n                                <Route path={'*'} element={<Error404 />} />\n                            </Routes>\n                        </Card>\n                    </Layout.Content>\n                </Layout>\n            </Layout>\n        </>\n    );\n\n}"],"names":["style","textAlign","service","data","axios","this","baseURL","params","query","id","ids","TinyMce","props","height","menubar","plugins","toolbar","content_style","initialValue","onChange","editorRef","useRef","onInit","evt","editor","current","init","file_browser_callback_types","file_picker_callback","cb","value","meta","input","document","createElement","setAttribute","onchange","file","files","reader","FileReader","readAsDataURL","onload","result","title","name","click","deprecation_warnings","onSelectionChange","getContent","Aboutus","layout","gutter","span","label","required","v","TandC","FAQ","Contactus","handleChange","width","padding","type","placeholder","email","e","target","number","address","PrivacyPolicy","url","config","UploadImage","fileList","setFileList","count","cropImage","disabled","listType","uploadImage","options","onSuccess","onError","onProgress","fmData","FormData","onUploadProgress","event","percent","loaded","total","append","fileService","then","res","uid","err","handleOnChange","fl","handleRemove","aspect","shape","quality","rotate","accept","customRequest","onRemove","className","length","icon","UploadOutlined","MyPagination","qData","setQData","showTotal","start","page","limit","end","pageSize","pp","showSizeChanger","Search","addNewModalRef","selected","deleteData","list","onSubmitCapture","marginBottom","key","allowClear","htmlType","float","PlusOutlined","onClick","openForm","onConfirm","okText","cancelText","danger","DeleteOutlined","AddForm","forwardRef","ref","useState","open","setOpen","setData","ajxRequesting","setAjxRequesting","Object","entries","forEach","ent","varDt","k","keys","split","i","parseInt","useImperativeHandle","dt","_id","fileType","save","Services","AntdMsg","message","catch","finally","useEffect","top","onOk","okButtonProps","onCancel","destroyOnClose","maskClosable","footer","spinning","indicator","LoadingOutlined","fontSize","spin","per_hr_rate","WorkHistory","workerId","loading","setLoading","setSelected","WorkHistoryService","map","extra","tableColumns","dataIndex","render","receiverName","phone","moment","format","filter","item","hidden","ellipsis","fixed","tableProps","bordered","size","showHeader","rowSelection","selectedRowKeys","tableLayout","undefined","level","marginTop","pagination","position","columns","dataSource","scroll","y","x","accountService","aadharImg","setAadharImg","nocImg","setNocImg","status","WorkerService","presentAddress","addressDetail","find","workerAddressType","parmanentAddress","street1","street2","city","state","pin","avatar","aadharImage","nocImage","userName","mode","serviceIds","ModelModal","AccountModal","modalData","setModalData","detail","bankName","holderName","accountNumber","IFSC","accountType","JobList","userId","user","setUser","jobService","sd","startTime","endTime","color","users","UserService","expandable","expandedRowRender","record","workerDetail","rowExpandable","userNames","setUserNames","Names","margin","searchKey","showSearch","optionFilterProp","filterOption","option","toLowerCase","includes","workers","orientation","display","gap","alignItems","startDate","endDate","Date","routes","DashboardOutlined","component","Dashboard","ApartmentOutlined","src","row","EditOutlined","BankOutlined","children","ModelModalRef","isActive","accountModalRef","setService","Service","CalendarOutlined","worker","setWorker","_","workerService","isAll","currentTab","setCurrentTab","changeForm","getDetails","activeKey","items","borderTop","flexDirection","paddingTop","paddingRight","doSave","setDoSave","PageHeader","greetingTime","checkedChildren","unCheckedChildren","checked","strong","editable","editing","triggerType","commonObj","currentPassword","newPassword","confirmNewPassword","convertMultiToSingle","arr","prevBaseUrl","to","push","LogoutOutlined","window","localStorage","clear","location","reload","paths","useLocation","pathname","reduce","prev","cur","defaultSelectedKeys","pop","defaultOpenKeys","theme","Error404","subTitle","newRoutes","MyLayout","minHeight","Menu","path","element"],"sourceRoot":""}